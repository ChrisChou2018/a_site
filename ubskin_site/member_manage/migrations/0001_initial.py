# Generated by Django 2.0.6 on 2018-08-13 08:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('member_id', models.AutoField(db_column='member_id', primary_key=True, serialize=False, verbose_name='用户ID')),
                ('member_name', models.CharField(blank=True, db_column='member_name', max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, db_column='telephone', max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, db_column='user_name', max_length=255, null=True, unique=True)),
                ('create_time', models.IntegerField(db_column='create_time', default=1534150665)),
                ('update_time', models.IntegerField(db_column='update_time', default=1534150665)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('avatar', models.CharField(blank=True, db_column='avatar', max_length=255, null=True)),
                ('status', models.CharField(db_column='status', default='normal', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'member',
                'permissions': (),
            },
        ),
    ]
